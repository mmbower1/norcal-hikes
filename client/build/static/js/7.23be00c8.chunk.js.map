{"version":3,"sources":["containers/subscription/Subscription.js","actions/subscription.js"],"names":["connect","state","subscribe","name","email","dispatch","a","config","headers","body","JSON","stringify","axios","post","type","NEW_SUBSCRIPTION","console","log","ERROR_SUBSCRIPTION","useState","formData","setFormData","onChange","e","target","value","className","action","onSubmit","preventDefault","alert","placeholder","required","htmlFor","id"],"mappings":"8PAgFeA,uBAJS,SAACC,GAAD,MAAY,CAClCC,UAAWD,EAAMC,aAGqB,CAAEA,UC5EjB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,8CAAqB,WAAMC,GAAN,iBAAAC,EAAA,6DACtCC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAGdC,EAAOC,KAAKC,UAAU,CAAER,OAAMC,UANQ,kBAQxBQ,IAAMC,KAAK,aAAcJ,EAAMF,GARP,cAS1CF,EAAS,CACPS,KAAMC,MAVkC,gDAgB1C,MACEC,QAAQC,IAAR,MAEFZ,EAAS,CACPS,KAAMI,MApBkC,yDAArB,wDD4EVlB,EAvEM,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,UAAgB,EACJiB,mBAAS,CAC3ChB,KAAM,GACNC,MAAO,KAH+B,mBAC9BgB,EAD8B,KACpBC,EADoB,KAK9BlB,EAAgBiB,EAAhBjB,KAAMC,EAAUgB,EAAVhB,MAETkB,EAAW,SAACC,GAAD,OAAOF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOrB,KAAOoB,EAAEC,OAAOC,QAAST,QAAQC,IAAIM,KAcjG,OACE,yBAAKG,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cACb,0BAAMC,OAAO,IAAID,UAAU,OAAOE,SAAU,SAACL,GAAD,OAjBtC,SAACA,GACjBA,EAAEM,iBACE3B,GACA4B,MAAM,eAET5B,EAAUC,EAAMC,IAGb0B,MAAM,SASmDF,CAASL,KAC1D,yBAAKG,UAAU,0BACb,wBAAIA,UAAU,qBAAd,kBAIF,yBAAKA,UAAU,eACb,2BACEZ,KAAK,OACLY,UAAU,cACVK,YAAY,YACZ5B,KAAK,OACLsB,MAAOtB,EACPmB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BS,UAAQ,IAEV,2BAAOC,QAAQ,OAAOP,UAAU,eAAhC,cAEF,yBAAKA,UAAU,eACb,2BACEZ,KAAK,QACLY,UAAU,cACVK,YAAY,QACZ5B,KAAK,QACLsB,MAAOrB,EACPkB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BW,GAAG,QACHF,UAAQ,IAEV,2BAAOC,QAAQ,QAAQP,UAAU,eAAjC,mBAIJ,4BAAQA,UAAU,oBAAlB","file":"static/js/7.23be00c8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n// actions\nimport { subscribe } from '../../actions/subscription';\n// components\nimport Button from '../../components/button/Button';\nimport './Subscription.scss';\n// import SubscribeLogo from '../../img/nat-10.jpg';\n\nconst Subscription = ({ subscribe }) => {\n  const [ formData, setFormData ] = useState({\n\t\tname: '',\n\t\temail: ''\n  });\n  const { name, email } = formData;\n\n\tconst onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value }, console.log(e));\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (subscribe) {\n      alert('subscribed!');\n\t\t\t// setAlert(`Welcome`, 'success');\n\t\t\tsubscribe(name, email);\n\t\t} else {\n      // setAlert('Invalid Credentials', 'danger');\n      alert('error');\n\t\t}\n\t};\n\n  return (\n    <div className=\"section-book\">\n      <div className=\"row\">\n        <div className=\"book\">\n          <div className=\"book__form\">\n            <form action=\"#\" className=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <div className=\"u-margin-bottom-medium\">\n                <h2 className=\"heading-secondary\">\n                  Subscribe now\n                </h2>\n              </div>\n              <div className=\"form__group\">\n                <input \n                  type=\"text\" \n                  className=\"form__input\" \n                  placeholder=\"Full Name\"\n                  name=\"name\" \n                  value={name}\n                  onChange={(e) => onChange(e)}\n                  required \n                />\n                <label htmlFor=\"name\" className=\"form__label\">Full name</label>\n              </div>\n              <div className=\"form__group\">\n                <input \n                  type=\"email\" \n                  className=\"form__input\" \n                  placeholder=\"Email\"\n                  name=\"email\" \n                  value={email}\n                  onChange={(e) => onChange(e)} \n                  id=\"email\" \n                  required \n                />\n                <label htmlFor=\"email\" className=\"form__label\">Email address</label>\n              </div>\n            </form>\n            {/* <Button type=\"submit\"></Button> */}\n            <button className=\"subscribe-button\">Subscribe</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  subscribe: state.subscribe\n})\n\nexport default connect(mapStateToProps, { subscribe })(Subscription);\n","import axios from 'axios';\nimport { NEW_SUBSCRIPTION, ERROR_SUBSCRIPTION } from './types';\n\n// subscribe new user\nexport const subscribe = ({ name, email }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const body = JSON.stringify({ name, email })\n  try {\n    const res = await axios.post('/subscribe', body, config);\n    dispatch({\n      type: NEW_SUBSCRIPTION,\n      // payload: res.data // jwt token\n    });\n    \n  } catch (err) {\n    // const errors = err.response.data.errors;\n    if (err) {\n      console.log(err);\n    }\n    dispatch({\n      type: ERROR_SUBSCRIPTION\n    })\n  }\n}\n"],"sourceRoot":""}